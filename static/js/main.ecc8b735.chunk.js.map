{"version":3,"sources":["components/Navigation/navigation.module.css","containers/ViewPortfolios/viewPortfolios.module.css","containers/SnackBarRenderer/snackBarRenderer.module.css","components/Card/card.module.css","components/AppContainer/appcontainer.module.css","containers/ImportData/importData.module.css","containers/Home/home.module.css","containers/ExportData/exportData.module.css","containers/Dashboard/dashboard.module.css","config/formTypes.js","components/AssetForm/formConfig.js","containers/FormFields/TextFieldContainer.jsx","components/SelectForm/SelectForm.jsx","components/AddDropdownList/AddDropdownList.jsx","containers/FormFields/FieldMapper.jsx","hooks.js","components/ButtonContainer/ButtonContainer.jsx","components/AssetForm/AssetForm.jsx","containers/CreatePortfolio/CreatePortfolio.jsx","components/ViewPortfoliosGrid/gridColumns.js","components/ViewPortfoliosGrid/ViewPortfoliosGrid.jsx","components/ViewPortfoliosGrid/prepareGrid.js","containers/SnackBarRenderer/SnackBarRenderer.jsx","components/Card/Card.jsx","components/ActionMenu/ActionMenu.jsx","containers/ViewPortfolios/ViewPortfolios.jsx","containers/MenuGrid/MenuGrid.jsx","containers/Home/Home.jsx","components/AssetsGrid/AssetsGrid.jsx","containers/viewPortfolio/viewPortfolio.jsx","components/BreadcrumbMenu/BreadcrumbMenu.jsx","components/Navigation/Navigation.jsx","components/AppContainer/AppContainer.jsx","containers/ExportData/ExportData.jsx","containers/ImportData/ImportData.jsx","containers/Dashboard/Dashboard.jsx","App.js","ducks/portfoliosReducer.js","ducks/createPortfolioReducer.js","app/store.js","serviceWorker.js","index.js","helpers/types.js","containers/MenuGrid/menuGrid.module.css","components/BreadcrumbMenu/breadcrumbMenu.module.css","components/AddDropdownList/AddDropdownList.module.css","components/ActionMenu/actionMenu.module.css","components/AssetForm/assetForm.module.css","components/ButtonContainer/buttoncontainer.module.css","containers/viewPortfolio/viewPortfolio.module.css"],"names":["module","exports","formType","makeType","name","default","label","type","allowedTypes","text","onChange","input","id","required","description","cryptoCurrency","labelId","menuItems","MenuItem","value","select","addDropdownList","dropdown","amount","error","helperText","fields","assetForm","TextFieldContainer","props","TextField","target","InputProps","className","theme","multilineColor","color","SelectForm","FormControl","sx","width","InputLabel","Select","choice","event","setChoice","children","AddDropdownList","useState","form","setForm","isAddDisabled","setIsAddDisabled","createCurrency","updatedState","useEffect","length","currency","console","log","selection","numberProps","InputLabelProps","shrink","Stack","spacing","direction","css","formContainer","submitRow","Button","variant","onClick","document","forms","reset","disabled","FieldMapper","useAppDispatch","useDispatch","useAppSelector","useSelector","AppContainer","primaryButton","secondaryButton","App","horizontalContainer","buttonStyles","AssetForm","dispatch","navigate","useNavigate","formState","state","createPortfolio","formData","isSubmitDisabled","formStateMutable","JSON","parse","stringify","payload","rel","href","assetFormConfig","map","section","i","formBodyContainer","sectionTitle","field","assets","changeHandler","fieldContainer","ButtonContainer","CreatePortfolio","gridColumns","headerName","renderCell","params","ViewPortfoliosGrid","portfolios","onRowSelect","areActive","modifiedPortfolio","setModifiedPortfolio","gridData","elem","updatedElem","to","style","height","rows","columns","pageSize","rowsPerPageOptions","checkboxSelection","disableSelectionOnClick","onSelectionModelChange","ids","selectedIDs","Set","selectedRowData","filter","row","has","defaultProps","SnackBarRenderer","showSnackBar","snackBarMessage","hideSnackbarCallback","Snackbar","open","autoHideDuration","onClose","snackBar","spaceBlock","Card","card","class","container","ActionMenu","deleteSelected","disableDeleteSelectedBtn","show","toggleEditMode","menuType","buttonLabel","getLabelText","portfoliosMenu","actionItems","actionButton","FormControlLabel","labelStyles","control","Switch","menuContainer","secondaryNavMenuContainerClosed","deleteAllPortfoliosCallback","ViewPortfolios","selectedRowKeys","setSelectedRowKeys","Object","values","viewPortfolios","portfolioArray","setPortfolioArray","showAllDeletedSnackbar","setShowAllDeletedSnackbar","portfoliosContainer","headerContainer","keys","data","rowSelectHandler","MenuGrid","menuGridContainer","tableStyles","squareCard","Home","location","useLocation","AssetsGrid","isEditable","cellChangeCallback","e","asset","editable","borderColor","onCellEditCommit","boxShadow","border","ViewPortfolio","editModeEnabled","setEditModeEnabled","slug","useParams","portfolio","index","portfolioContainer","header","portfolioID","cellChangeHandler","BreadcrumbMenu","isVisibleCallback","pathname","separator","createCrumb","breadcrumbContainer","viewMyPortfoliosCrumb","viewPortfolioCrumb","importDataCrumb","exportDataCrumb","dashboardCrumb","Breadcrumbs","includes","Navigation","isSecondaryNavVisible","setIsSecondaryNavVisible","navContainer","navPrimary","navSecondary","bodyContainer","Box","minWidth","allPortfolioState","date","Date","timestamp","now","day","getDate","month","getMonth","year","getFullYear","test","Blob","url","window","URL","createObjectURL","getElementById","download","userState","setUserState","preventDefault","fileReader","FileReader","readAsText","files","onload","result","importDataHandler","textContainer","Dashboard","path","element","ExportData","ImportData","add","createAction","importData","deleteAll","editPortfolioRow","deleteAsset","deletePortfolios","portfoliosReducer","createReducer","builder","addCase","action","importArray","portfoliosMutable","newArray","concat","newState","forEach","assetState","key","updateFormData","updateFormDataAssets","resetToDefault","initialState","isAddCurrencyDisabled","createPortfolioReducer","store","configureStore","reducer","Boolean","hostname","match","rootElement","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","checkbox","textarea","requiredFields","Proxy","get","obj","property","_","mapValues","process","mode","undefined","Error","set","validate","Array","isArray","func","options","checkConfigObj","Reflect"],"mappings":"yFACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,aAAe,iCAAiC,aAAe,mC,oBCA7HD,EAAOC,QAAU,CAAC,oBAAsB,4CAA4C,gBAAkB,0C,oBCAtGD,EAAOC,QAAU,CAAC,SAAW,mCAAmC,YAAc,sCAAsC,WAAa,uC,oBCAjID,EAAOC,QAAU,CAAC,KAAO,mBAAmB,UAAY,0B,oBCAxDD,EAAOC,QAAU,CAAC,IAAM,0BAA0B,WAAW,+BAA+B,gBAAgB,oCAAoC,aAAa,iCAAiC,WAAW,+BAA+B,cAAgB,sC,oBCAxPD,EAAOC,QAAU,CAAC,UAAY,8BAA8B,kBAAoB,sCAAsC,cAAgB,oC,0CCAtID,EAAOC,QAAU,CAAC,UAAY,wBAAwB,kBAAoB,kC,oBCA1ED,EAAOC,QAAU,CAAC,UAAY,8BAA8B,kBAAoB,wC,0CCAhFD,EAAOC,QAAU,CAAC,UAAY,6BAA6B,kBAAoB,uC,qHC2CzEC,EAAWC,YAAS,WAI1BD,EAASE,KAAO,CACdC,QAAS,KACTC,MAAO,OACPC,KAAMC,IAAaC,KACnBC,SAAU,SAACC,EAAOC,GAAR,OAAe,MACzBA,GAAI,OACJC,UAAU,GAGZX,EAASY,YAAc,CACrBT,QAAS,KACTC,MAAO,cACPC,KAAMC,IAAaC,KACnBC,SAAU,SAACC,EAAOC,GAAR,OAAe,MACzBA,GAAI,cACJC,UAAU,GAGZX,EAASa,eAAiB,CACxBV,QAAS,UACTC,MAAO,kBACPU,QAAS,2BACTJ,GAAI,iBACJK,UAAW,CAAC,cAACC,EAAA,EAAD,CAAUC,MAAO,MAAjB,iBAAwC,cAACD,EAAA,EAAD,CAAUC,MAAO,MAAjB,kBACpDZ,KAAMC,IAAaY,OACnBV,SAAU,SAACC,EAAOC,GAAR,OAAe,MACzBC,UAAU,GAGZX,EAASmB,gBAAkB,CACzBd,KAAMC,IAAaa,gBACnBT,GAAI,SACJU,SAAU,CACRjB,QAAS,UACTC,MAAO,kBACPU,QAAS,2BACTJ,GAAI,WACJK,UAAW,CAAC,cAACC,EAAA,EAAD,CAAUC,MAAO,MAAjB,iBAAwC,cAACD,EAAA,EAAD,CAAUC,MAAO,MAAjB,kBACpDN,UAAU,GAGZH,SAAU,SAACC,EAAOC,GAAR,OAAe,OAG3BV,EAASqB,OAAS,CAChBlB,QAAS,KACTC,MAAO,iBACPC,KAAMC,IAAaC,KACnBe,OAAO,EACPC,WAAY,mBACZf,SAAU,SAACC,EAAOC,GAAR,OAAe,MACzBA,GAAI,SACJC,UAAU,GAGGX,ICrGEE,EAAMsB,EDqGRxB,IC3FAyB,EARI,EAFFvB,EAIL,wBAJWsB,EAIc,CAC7BxB,EAASE,KACTF,EAASY,YACTZ,EAASmB,iBAPkB,CAAEjB,OAAMsB,Y,iBCqB5BE,MArBf,SAA4BC,GAY1B,OAAO,cAACC,EAAA,EAAD,2BACDD,GADC,IAELnB,SAZoB,SAACC,GACrBkB,EAAMnB,SAASC,EAAMoB,OAAOZ,MAAOU,EAAMjB,KAYzCoB,WAAY,CACVC,UAVW,SAAAC,GAAK,MAAK,CACvBC,eAAe,CACXC,MAAM,SAQUD,oB,2BCITE,MAjBf,SAAoBR,GAOlB,OACM,eAACS,EAAA,EAAD,CAAaC,GAAI,CAAEC,MAAO,QAA1B,UACI,cAACC,EAAA,EAAD,CAAY7B,GAAG,2BAAf,SACKiB,EAAMvB,QAEX,cAACoC,EAAA,EAAD,2BAAYb,GAAZ,IAAmBV,MAAOU,EAAMc,OAAQjC,SAV5B,SAACkC,GACrBf,EAAMgB,UAAUD,EAAMb,OAAOZ,OAC7BU,EAAMnB,SAASkC,EAAMb,OAAOZ,MAAOU,EAAMjB,KAQgCC,UAAU,EAAMiC,SAAUjB,EAAMZ,iB,0CCyD9F8B,MAlEf,SAAyBlB,GAEvB,MAAwBmB,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOL,EAAP,KAAeE,EAAf,KACA,EAA0CG,oBAAS,GAAnD,mBAAOG,EAAP,KAAsBC,EAAtB,KAEMC,EAAiB,SAAC1C,EAAOC,GAC7B,IAAM0C,EAAY,eAAQL,GAC1BK,EAAa1C,GAAMD,EACnBuC,EAAQI,IAGVC,qBAAU,WACLN,GAAQA,EAAK1B,QAAU0B,EAAK1B,OAAOiC,OAAS,GAAKP,EAAKQ,UAAYR,EAAKQ,SAASD,OAAS,GAC1FJ,GAAiB,GACjBM,QAAQC,IAAI,oBAAqBV,EAAK1B,OAAOiC,SAE1CJ,GAAiB,KAEvB,CAACH,IAEFpB,EAAMP,SAASqB,OAASA,EACxBd,EAAMP,SAASuB,UAAY,SAACe,GAAD,OAAef,EAAUe,IAEpD,IAQMC,EAAc,CAClBjD,GAAI,SACJN,MAAO,SACPC,KAAM,SACNuD,gBAAiB,CACfC,QAAQ,GAEVlD,UAAU,EACVH,SAAU,SAACC,EAAOC,GAAQyC,EAAe1C,EAAOC,KAGlD,OACE,cAACoD,EAAA,EAAD,CAAOC,QAAS,EAAGC,UAAU,MAA7B,SACE,sBAAMtD,GAAG,WAAT,SACE,sBAAKqB,UAAWkC,IAAIC,cAApB,UACE,qBAAKnC,UAAWkC,IAAI7C,SAApB,SACE,cAAC,EAAD,2BAAgBO,EAAMP,UAAtB,IAAgCwB,SAAUjB,EAAMP,SAASL,UAAWP,SAAU,SAACC,EAAOC,GAAQyC,EAAe1C,EAAOC,SAEtH,sBAAKqB,UAAWkC,IAAIE,UAApB,UACE,qBAAKpC,UAAWkC,IAAIxD,MAApB,SACE,cAAC2B,EAAA,EAAD,CAAaC,GAAI,CAAEC,MAAO,QAA1B,SACE,cAAC,EAAD,eAAwBqB,QAG5B,qBAAK5B,UAAWkC,IAAIxD,MAApB,SACE,cAAC2D,EAAA,EAAD,CAAQC,QAAQ,WAAWC,QAAS,kBAhC9Cd,QAAQC,IAAI,mBACZ9B,EAAMnB,SAASuC,EAAMpB,EAAMjB,IAC3B6D,SAASC,MAAT,SAA2BC,QAC3B9B,EAAU,SACVK,EAAQ,OA4ByD0B,SAAUzB,EAAjE,8BCtCC0B,EAbK,SAAChD,GACnB,OAAQA,EAAMtB,MACZ,KAAKC,IAAaC,KAChB,OAAO,cAAC,EAAD,eAAwBoB,IACjC,KAAKrB,IAAaY,OAChB,OAAO,cAAC,EAAD,2BAAgBS,GAAhB,IAAuBiB,SAAUjB,EAAMZ,aAChD,KAAKT,IAAaa,gBACd,OAAO,cAAC,EAAD,2BAAqBQ,GAArB,IAA4BiB,SAAUjB,EAAMZ,aACvD,QACE,OAAO,O,yBCpBA6D,EAAiB,kBAAMC,eACvBC,EAAiBC,I,iBCYfC,EAba,SAAC,GAAD,IAAEC,EAAF,EAAEA,cAAeC,EAAjB,EAAiBA,gBAAjB,OAExB,qBAAKnD,UAAWkC,IAAIkB,IAApB,SACE,sBAAKpD,UAAWkC,IAAImB,oBAApB,UACE,qBAAKrD,UAAWkC,IAAIoB,aAApB,SACGH,IAEH,qBAAKnD,UAAWkC,IAAIoB,aAApB,SACGJ,UCEI,SAASK,IAEpB,IAAMC,EAAWX,IACXY,EAAWC,cAEXC,EAAYZ,GAAe,SAAAa,GAAK,OAAIA,KAAOC,gBAAgBC,SAC3DC,EAAmBhB,GAAe,SAAAa,GAAK,OAAIA,KAAOC,gBAAgBE,iBAClEC,EAAmBC,KAAKC,MAAOD,KAAKE,UAAWR,IAiC/CT,EAAe,cAACb,EAAA,EAAD,CAAQC,QAAQ,WAAWC,QAAS,kBAdrDiB,EAAS,CAAElF,KAAM,iBAAkB8F,QAASJ,IAC5CR,EAAS,CAAElF,KAAM,iBAAkB8F,QAAS,OAC5CZ,EAAS,CAAElF,KAAM,mBAAoB8F,QAAS,YAC9CX,EAAS,YAAa,CAClBG,MAAM,CAAEzF,KAAK,wBAUuDwE,SAAUoB,EAAjE,oBACfZ,EAAiB,cAACd,EAAA,EAAD,CAAQC,QAAQ,WAAWC,QAAS,kBALvDiB,EAAS,CAAElF,KAAM,iBAAkB8F,QAAS,YAC5CX,EAAS,cAIU,oBAEvB,OAEI,gCACI,+BACI,sBAAMY,IAAI,aAAaC,KAAK,iBAGhCC,EAAgBC,KAAI,SAACC,EAASC,GAC1B,OACI,sBAAK1E,UAAWkC,IAAIyC,kBAApB,UACI,qBAAK3E,UAAWkC,IAAI0C,aAApB,SACI,6BAAKH,EAAQtG,SAEjB,sBAAK6B,UAAWkC,IAAIC,cAApB,UACI,cAAC9B,EAAA,EAAD,CAAaC,GAAI,CAAEC,MAAO,QAA1B,SACKkE,EAAQhF,OAAO+E,KAAI,SAACK,GAGb,OAFJA,EAAM3F,MAAQyE,EAAUkB,EAAMlG,IAC9BkG,EAAMpG,SAAW,SAACC,EAAOC,IAnDnC,SAACD,EAAOC,GAEf,WAAPA,GAAmBD,GACnBsF,EAAiBc,OAAOpG,EAAM8C,UAAY9C,EAC1C8E,EAAS,CAAElF,KAAM,uBAAwB8F,QAASJ,EAAiBc,SACnEtB,EAAS,CAAElF,KAAM,mBAAoB8F,QAAS,SAG9CJ,EAAiBrF,GAAMD,EACvB+C,QAAQC,IAAIsC,GACZR,EAAS,CAAElF,KAAM,iBAAkB8F,QAASJ,IAC5CR,EAAS,CAAElF,KAAM,mBAAoB8F,QAAS,QAwCWW,CAAcrG,EAAOC,IAE9C,qBAAKqB,UAAWkC,IAAI8C,eAApB,SACKpC,EAAYiC,UAMjC,cAACI,EAAD,CAAiB/B,cAAeA,EAAeC,gBAAiBA,gBCzE7E+B,MALf,WAEE,OAAQ,cAAC3B,EAAD,K,mCCLH,IAAM4B,EAAc,CACzB,CAAEN,MAAO,OAAQO,WAAY,OAAQ7E,MAAO,IAAK8E,WAAY,SAACC,GAAD,OAAYA,EAAOpG,QAChF,CAAE2F,MAAO,cAAeO,WAAY,cAAe7E,MAAO,MCG5D,SAASgF,EAAT,GAKM,IAHFC,EAGC,EAHDA,WAEAC,GACC,EAFDC,UAEC,EADDD,aAGF,EAAkD1E,mBAAS,IAA3D,mBAAO4E,EAAP,KAA0BC,EAA1B,KAaA,OAXAtE,qBAAU,WACR,GAAGkE,EAAWjE,OAAS,EAAG,CACxB,IAAMsE,EAAuBL,ECddhB,KAAI,SAACsB,GACpB,IAAMC,EAAW,eAAOD,GAExB,OADAC,EAAY5H,KAAO,cAAC,IAAD,CAAM6H,GAAE,iCAA4BF,EAAKnH,IAAzC,SAAgDmH,EAAK3H,OAChE4H,KDYRH,EAAqBC,QAGrBD,EAAqB,MAGxB,CAACJ,IAGA,qBAAKS,MAAO,CAAEC,OAAQ,IAAK3F,MAAO,OAAQJ,MAAO,SAAjD,SACE,cAAC,IAAD,CACEgG,KAAMR,EACNS,QAASjB,EACTkB,SAAU,EACVC,mBAAoB,CAAC,GACrBC,mBAAiB,EACjBC,yBAAuB,EACvBC,uBAAwB,SAACC,GACvB,IAAMC,EAAc,IAAIC,IAAIF,GACtBG,EAAkBrB,EAAWsB,QAAO,SAACC,GAAD,OAC1CJ,EAAYK,IAAID,EAAIpI,OAEpB8G,EAAYoB,QActBtB,EAAmB0B,aAAe,GAEnB1B,Q,6CEjDf,SAAS2B,EAAT,GAIM,IAHFC,EAGC,EAHDA,aACAC,EAEC,EAFDA,gBACAC,EACC,EADDA,qBAGF,OACI,cAACC,EAAA,EAAD,CACEC,KAAMJ,EACNK,iBAAkB,IAClBC,QAAS,kBAAMJ,KAHjB,SAKE,sBAAKrH,UAAWkC,IAAIwF,SAApB,UACE,cAAC,IAAD,CAAiBvH,MAAM,YACvB,qBAAKH,UAAWkC,IAAIyF,aAClB,+BACGP,SAafF,EAAiBD,aAAe,CAC9BI,qBAAsB,cAGTH,Q,yCC1BAU,OAXf,YAA2B,IAAZ/G,EAAW,EAAXA,SAEb,OACM,qBAAKb,UAAWkC,KAAI2F,KAApB,SACE,qBAAKC,MAAO5F,KAAI6F,UAAhB,SACGlH,O,oBCUb,SAASmH,GAAT,GAMI,IALFC,EAKC,EALDA,eACAC,EAIC,EAJDA,yBACAC,EAGC,EAHDA,KACAC,EAEC,EAFDA,eACAC,EACC,EADDA,SAGMC,EAjBa,SAACD,GACpB,MAAgB,cAAbA,EACM,yBAEO,eAAbA,EACM,kCADT,EAaoBE,CAAaF,GAE3BG,EACJ,sBAAKxI,UAAWkC,KAAIuG,YAApB,UACE,wBACElG,QAAS,kBAAM0F,KACfjI,UAAWkC,KAAIwG,aACf/F,SAAUuF,EAHZ,SAKGI,IAGH,cAACK,GAAA,EAAD,CAAkB3I,UAAWkC,KAAI0G,YAAaC,QAAS,cAACC,GAAA,EAAD,CAAQrK,SAAU2J,EAAgBzF,SAAuB,eAAb0F,IAA+BhK,MAAM,iBAG5I,OAAI8J,EAEF,qBAAKnI,UAAWkC,KAAI6G,cAApB,SACE,cAAC,GAAD,UACI,qBAAK/I,UAAWkC,KAAI8G,gCAApB,SACGR,QALM,KAoBnBR,GAAWf,aAAe,CACxBgC,4BAA6B,aAC7Bb,eAAgB,cAGHJ,UCFAkB,OAxDf,WACE,MAA8CnI,mBAAS,IAAvD,mBAAOoI,EAAP,KAAwBC,EAAxB,KACMxF,EAAQb,GAAe,SAAAa,GAAK,OAAIA,KAChC4B,EAAa6D,OAAOC,OAAO1F,EAAM2F,eAAe/D,YACtD,EAA4CzE,mBAASyE,GAArD,mBAAOgE,EAAP,KAAuBC,EAAvB,KACA,EAA4D1I,oBAAS,GAArE,mBAAO2I,EAAP,KAA+BC,EAA/B,KAEArI,qBAAU,WACR,IAAMkE,EAAa6D,OAAOC,OAAO1F,EAAM2F,eAAe/D,YAEtDiE,EAAkBjE,KACjB,CAAC5B,EAAM2F,eAAe/D,aAEzB,IAAME,EAAY9B,EAAM2F,eAAe7D,UAEjClC,EAAWX,IAgBjB,OACI,sBAAK7C,UAAWkC,IAAI0H,oBAApB,UACE,qBAAK5J,UAAWkC,IAAI2H,gBAApB,SACE,sDAEF,cAAC,GAAD,CACE5B,eAAgB,WATtBzE,EAAS,CAAElF,KAAM,mBAAoB8F,QAHxB,CACX0F,KAAMX,MAYFjB,yBAAqD,IAA3BiB,EAAgB5H,OAC1C4G,KAAMzC,EACN2C,SAAS,eAEX,cAAC,EAAD,CACE7C,WAAYgE,EACZ9D,UAAWA,EACXD,YAAa,SAACsE,GAAD,OA1BI,SAAC5D,GACxB,IAAMgD,EAAkBhD,EAAK3B,KAAK,SAACuC,GAAD,OAASA,EAAIpI,MAC/CyK,EAAmBD,GAwBUa,CAAiBD,MAE1C,cAAC,EAAD,CACE5C,aAAcuC,EACdtC,gBAhCa,mCAiCbC,qBAAsB,kBAAMsC,GAA0B,U,6BCdjDM,OAvCf,WACE,OACE,qBAAKjK,UAAWkC,KAAIgI,kBAApB,SACE,wBAAOlK,UAAWkC,KAAIiI,YAAtB,UACE,qBAAInK,UAAWkC,KAAIgI,kBAAnB,UACE,cAAC,IAAD,CAAMlE,GAAG,sBAAT,SACE,oBAAIhG,UAAWkC,KAAIkI,WAAnB,yBAIF,cAAC,IAAD,CAAMpE,GAAG,mBAAT,SACE,oBAAIhG,UAAWkC,KAAIkI,WAAnB,gCAIF,cAAC,IAAD,CAAMpE,GAAG,yBAAT,SACE,oBAAIhG,UAAWkC,KAAIkI,WAAnB,gCAKJ,qBAAIpK,UAAWkC,KAAIgI,kBAAnB,UACE,cAAC,IAAD,CAAMlE,GAAG,uBAAT,SACE,oBAAIhG,UAAWkC,KAAIkI,WAAnB,gCAIF,cAAC,IAAD,CAAMpE,GAAG,uBAAT,SACE,oBAAIhG,UAAWkC,KAAIkI,WAAnB,uCCZGC,OAff,WAEE,IAAMC,EAAWC,cAEjB,OACA,gCACE,cAAC,GAAD,IAEAD,EAAS1G,OAAS0G,EAAS1G,MAAMzF,KACjC,cAAC,EAAD,CAAkBgJ,cAAc,EAAMC,gBAAiBkD,EAAS1G,MAAMzF,OAAW,S,oBCXrF,SAASqM,GAAT,GAAiF,IAA5DhF,EAA2D,EAA3DA,WAAYiF,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,mBAAoBjF,EAAe,EAAfA,YAEzDV,EAAgB,SAAC4F,GACrB,GAAGA,EAAE9F,OAAS8F,EAAE5D,KAAO4D,EAAEzL,OAASyL,EAAE5D,IAAI4D,EAAE9F,SAAW8F,EAAEzL,MAAO,CAC5D,IAAM6K,EAAO,CACXlF,MAAO8F,EAAE9F,MACT+F,MAAOD,EAAE5D,IAAIvF,SACbtC,MAAOyL,EAAEzL,OAEXwL,EAAmBX,KAIjB3D,EAAU,CACd,CAAEvB,MAAO,WAAYO,WAAY,WAAY7E,MAAO,IAAK8E,WAAY,SAACC,GAAD,OAAYA,EAAOpG,OAAO2L,SAAUJ,GACzG,CAAE5F,MAAO,SAAUO,WAAY,SAAU7E,MAAO,IAAKsK,SAAUJ,EAAYhM,SAAU,SAACkM,GAAD,OAAO5F,EAAc4F,MAGtGG,EAAcL,EAAa,eAAiB,gBAElD,OACE,qBAAKxE,MAAO,CAAEC,OAAQ,IAAK3F,MAAO,QAAlC,SACE,cAAC,IAAD,CACE4F,KAAMX,EACNY,QAASA,EACTC,SAAU,GACVC,mBAAoB,CAAC,IACrBC,mBAAmB,EACnBC,yBAAyB,EACzBuE,iBAAkBhG,EAClB0B,uBAAwB,SAACC,GACvB,IAAMC,EAAc,IAAIC,IAAIF,GACtBG,EAAkBrB,EAAWsB,QAAO,SAACC,GAAD,OAC1CJ,EAAYK,IAAID,EAAIpI,OAEpB8G,EAAYoB,IAEdvG,GAAI,CACF0K,UAAW,EACXC,OAAQ,EACRH,YAAaA,OAevBN,GAAWvD,aAAe,GAEXuD,UCaAU,OAlEf,WACE,MAA8CnK,mBAAS,IAAvD,mBAAOoI,EAAP,KAAwBC,EAAxB,KACA,EAA8CrI,oBAAS,GAAvD,mBAAOoK,EAAP,KAAwBC,EAAxB,KACQC,EAASC,cAATD,KACFzH,EAAQb,GAAe,SAAAa,GAAK,OAAIA,KAChCJ,EAAWX,IAEX0I,EAAYtH,KAAKC,MAAOD,KAAKE,UAAWP,EAAM2F,eAAe/D,WAAW6F,KAC9EE,EAAUzG,OAASuE,OAAOC,OAAOiC,EAAUzG,QAAQN,KAAI,SAACoG,EAAOY,GAE7D,OADAZ,EAAMjM,GAAK6M,EACJZ,KAGT,IAAM9F,EAASb,KAAKC,MAAOD,KAAKE,UAAWoH,EAAUzG,SA2BrD,OAzBAxD,qBAAU,WACR8J,GAAmB,KAClB,IAwBD,sBAAKpL,UAAWkC,KAAIuJ,mBAApB,UACE,sBAAKzL,UAAWkC,KAAI2H,gBAApB,UACE,oBAAI7J,UAAWkC,KAAIwJ,OAAnB,SAA6BH,EAAUpN,OACvC,oBAAI6B,UAAWkC,KAAIwJ,OAAnB,SAA6BH,EAAU1M,iBAGzC,cAAC,GAAD,CACIoJ,eAAgB,WAhBxBzE,EAAS,CAAElF,KAAM,cAAe8F,QAJnB,CACX0F,KAAMX,EACNwC,YAAaN,MAmBPnD,yBAAqD,IAA3BiB,EAAgB5H,OAC1C4G,MAAM,EACNC,eAAgB,WA/BxBgD,GAAoBD,IAgCZ9C,SAAS,cAGb,cAAC,GAAD,CACE7C,WAAYV,EACZ2F,WAAYU,EACZT,mBAAoB,SAACX,GAAD,OAnCF,SAACA,GACzBA,EAAK4B,YAAcN,EACnB7H,EAAS,CAAElF,KAAM,mBAAoB8F,QAAS2F,IAiCV6B,CAAkB7B,IAChDtE,YAAa,SAACsE,GAAD,OAxBI,SAAC5D,GACxB,IAAMgD,EAAkBhD,EAAK3B,KAAK,SAACuC,GAAD,OAASA,EAAIvF,YAC/C4H,EAAmBD,GAsBUa,CAAiBD,U,wCC2BjC8B,OAtFf,YAAgD,IAAtBC,EAAqB,EAArBA,kBAClBC,EAAWxB,cAAcwB,SAEzBC,EAAY,qBAAKhM,UAAWkC,KAAI8J,UAApB,eACZC,EAAc,sBAAKjM,UAAWkC,KAAIgK,oBAApB,UAChB,cAAC,IAAD,CAAMlG,GAAG,YAAYC,MAAO,CAAE9F,MAAO,SAArC,kBACC6L,EAFe,YAKdG,EAAwB,sBAAKnM,UAAWkC,KAAIgK,oBAApB,UAC1B,cAAC,IAAD,CAAMlG,GAAG,YAAYC,MAAO,CAAE9F,MAAO,SAArC,kBACC6L,EAFyB,mBAMxBI,EAAqB,sBAAKpM,UAAWkC,KAAIgK,oBAApB,UACzB,cAAC,IAAD,CAAMlG,GAAG,YAAYC,MAAO,CAAE9F,MAAO,SAArC,kBACC6L,EACD,cAAC,IAAD,CAAMhG,GAAG,wBAAwBC,MAAO,CAAE9F,MAAO,SAAjD,2BACC6L,EAJwB,oBAQrBK,EACJ,sBAAKrM,UAAWkC,KAAIgK,oBAApB,UACE,cAAC,IAAD,CAAMlG,GAAG,YAAYC,MAAO,CAAE9F,MAAO,SAArC,kBACC6L,EACD,cAAC,IAAD,CAAMhG,GAAG,cAAcC,MAAO,CAAE9F,MAAO,SAAvC,4BAGEmM,EACN,sBAAKtM,UAAWkC,KAAIgK,oBAApB,UACE,cAAC,IAAD,CAAMlG,GAAG,YAAYC,MAAO,CAAE9F,MAAO,SAArC,kBACC6L,EAFH,iBAMIO,EACN,sBAAKvM,UAAWkC,KAAIgK,oBAApB,UACE,cAAC,IAAD,CAAMlG,GAAG,YAAYC,MAAO,CAAE9F,MAAO,SAArC,kBACC6L,EAFH,eAyCE,OACE,eAACQ,GAAA,EAAD,CAAa,aAAW,aAAxB,WAnCc,cAAbT,GACDD,GAAkB,GAEJ,qBAAbC,GACDD,GAAkB,GACXG,GAEO,2BAAbF,GACDD,GAAkB,GACXK,GAENJ,EAASU,SAAS,4BACnBX,GAAkB,GACXM,GAGO,yBAAbL,GACDD,GAAkB,GACXO,GAGO,yBAAbN,GACDD,GAAkB,GACXQ,GAGO,wBAAbP,GACDD,GAAkB,GACXS,QAFT,GASE,Q,qBCrEWG,OAff,WACE,MAA0D3L,oBAAS,GAAnE,mBAAO4L,EAAP,KAA8BC,EAA9B,KAEA,OACI,yBAAQ5M,UAAWkC,KAAI2K,aAAvB,UACE,qBAAK7M,UAAWkC,KAAI4K,WAApB,kCAGA,qBAAK9M,UAAW2M,EAAwBzK,KAAI6K,aAAe,KAA3D,SACE,cAAC,GAAD,CAAgBjB,kBAAmB,SAAC5M,GAAD,OAAW0N,EAAyB1N,Y,qBCOlE+D,GAfa,SAAC,GAAgB,IAAfpC,EAAc,EAAdA,SAE9B,OACI,sBAAKb,UAAWkC,KAAIkB,IAApB,UACE,cAAC,GAAD,IACA,sBAAMpD,UAAWkC,KAAI8K,cAArB,SACE,cAACC,GAAA,EAAD,CAAK3M,GAAI,CAAE4M,SAAU,KAArB,SACKrM,U,OCyBEwJ,OA/Bf,WAEE,IACM8C,EADQpK,GAAe,SAAAa,GAAK,OAAIA,KACN2F,eAAe/D,WACzC4H,EAAM,IAAIC,KACVC,EAAYD,KAAKE,MACjBC,EAAMJ,EAAKK,UACXC,EAAQN,EAAKO,WACbC,EAAOR,EAAKS,cAalB,OAVAvM,qBAAU,WACRG,QAAQC,IAAI,0BACZ,IAAMoM,EAAO7J,KAAKE,UAAUgJ,GACtBpD,EAAO,IAAIgE,KAAK,CAACD,GAAO,CAACxP,KAAM,qBAC/B0P,EAAMC,OAAOC,IAAIC,gBAAgBpE,GAEvCvH,SAAS4L,eAAe,iBAAiB9J,KAAO0J,IAEjD,IAGD,gCACE,6CACA,mBAAGrP,GAAG,gBAAgB0P,SAAQ,yBAAoBb,EAApB,YAA2BE,EAA3B,YAAoCE,EAApC,YAA4CN,EAA5C,SAA8DhJ,KAAK,GAAjG,SACA,cAACjC,EAAA,EAAD,CAAQC,QAAQ,WAAhB,kC,8BCmBW+H,OA5Cf,WACgBtH,GAAe,SAAAa,GAAK,OAAIA,KACN2F,eAAe/D,WAD/C,IAEA,EAAkCzE,mBAAS,IAA3C,mBAAOuN,EAAP,KAAkBC,EAAlB,KACM/K,EAAWX,IAsBjB,OAnBAvB,qBAAU,WACRG,QAAQC,IAAI,gCACZD,QAAQC,IAAI,YAAa4M,KACxB,CAACA,IAiBJ,gCACE,6CACA,uBAAOhQ,KAAK,OAAOG,SAAU,SAACkM,GAAD,OAjBL,SAACA,GAG1BA,EAAE6D,iBACD,IAAMC,EAAa,IAAIC,WAEvBD,EAAWE,WAAWhE,EAAE7K,OAAO8O,MAAM,GAAI,SACzCH,EAAWI,OAAS,SAAAlE,GAClB,IAAMmE,EAAS7K,KAAKC,MAAMyG,EAAE7K,OAAOgP,QACnCP,EAAaO,GACbtL,EAAS,CAAElF,KAAM,oBAAqB8F,QAAS0K,KAObC,CAAkBpE,MACpD,uBACG,4BAA8B2D,EAC/B,sBAAKtO,UAAWkC,KAAI8M,cAApB,2CAEE,uBACA,uBAHF,iFAKE,uBALF,kG,OC1BOC,OATf,WAEE,OACA,qDCyBa7L,OAlBf,WACE,OACI,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8L,KAAK,YAAYC,QAAS,cAAC,GAAD,MACjC,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,QAAS,cAAC,EAAD,MACvC,cAAC,IAAD,CAAOD,KAAK,wBAAwBC,QAAS,cAAC,GAAD,MAC7C,cAAC,IAAD,CAAOD,KAAK,wBAAwBC,QAAS,cAAC,GAAD,IAA7C,SACE,cAAC,IAAD,CAAOD,KAAK,YAEd,cAAC,IAAD,CAAOA,KAAK,sBAAsBC,QAAS,cAACC,GAAD,MAC3C,cAAC,IAAD,CAAOF,KAAK,sBAAsBC,QAAS,cAACE,GAAD,MAC3C,cAAC,IAAD,CAAOH,KAAK,qBAAqBC,QAAS,cAAC,GAAD,Y,SCvB9CG,GAAMC,aAAa,kBACnBC,GAAaD,aAAa,qBAC1BE,GAAYF,aAAa,uBACzBG,GAAmBH,aAAa,oBAChCI,GAAcJ,aAAa,eAC3BK,GAAmBL,aAAa,oBAQzBM,GAAoBC,aANZ,CACnBtK,WAAY,GACZE,WAAW,IAIgD,SAACqK,GAE5DA,EACGC,QAAQV,IAAK,SAAC1L,EAAOqM,GACpB,IAAMzE,EAAQnC,OAAOS,KAAKlG,EAAM4B,YAAYjE,OAC5C0O,EAAO7L,QAAQzF,GAAK6M,EACpB5H,EAAM4B,WAAWyK,EAAO7L,QAAQzF,IAAMsR,EAAO7L,SACtB,IAApBR,EAAM8B,YACP9B,EAAM8B,WAAY,MAGrBsK,QAAQR,IAAY,SAAC5L,EAAOqM,GAC3B,IAAMC,EAAc7G,OAAOC,OAAO2G,EAAO7L,SAEnC+L,EAAoBlM,KAAKC,MAAOD,KAAKE,UAAWP,EAAM4B,aAGtD4K,EADqB/G,OAAOC,OAAO6G,GACLE,OAAOH,GAErCI,EAAW,GAEjBF,EAASG,SAAQ,SAAChF,EAAWC,GAC3BD,EAAU5M,GAAK6M,EACf8E,EAAS9E,GAASD,KAGpB3H,EAAM4B,WAAa4K,KAEpBJ,QAAQP,IAAW,SAAC7L,EAAOqM,GAC1BrM,EAAM4B,WAAa,GACnB5B,EAAM8B,WAAY,KAEnBsK,QAAQN,IAAkB,SAAC9L,EAAOqM,GACjC,IAAMtE,EAAcsE,EAAO7L,QAAQuH,YAEnC,GADAlK,QAAQC,IAAI,iBAAkBuO,GACF,aAAzBA,EAAO7L,QAAQS,MAAsB,CAEtC,IAAM2L,EAAa5M,EAAM4B,WAAWmG,GAAa7G,OAAOmL,EAAO7L,QAAQwG,OAOvE,OALA4F,EAAWP,EAAO7L,QAAQS,OAASoL,EAAO7L,QAAQlF,MAGlD0E,EAAM4B,WAAWmG,GAAa7G,OAAOmL,EAAO7L,QAAQlF,OAASsR,SACtD5M,EAAM4B,WAAWmG,GAAa7G,OAAOmL,EAAO7L,QAAQwG,OACpDhH,EAET,GAA4B,WAAzBqM,EAAO7L,QAAQS,MAAoB,CACpC,IAAM2L,EAAa5M,EAAM4B,WAAWmG,GAAa7G,OAAOmL,EAAO7L,QAAQwG,OAGvE,OAFA4F,EAAWP,EAAO7L,QAAQS,OAASoL,EAAO7L,QAAQlF,MAClD0E,EAAM4B,WAAWmG,GAAa7G,OAAOmL,EAAO7L,QAAQwG,OAAS4F,EACtD5M,EAET,OAAOA,KAERoM,QAAQL,IAAa,SAAC/L,EAAOqM,GAK5B,OAJqBA,EAAO7L,QAAQ0F,KACvByG,SAAQ,SAACE,UACb7M,EAAM4B,WAAWyK,EAAO7L,QAAQuH,aAAa7G,OAAO2L,MAEtD7M,KAERoM,QAAQJ,IAAkB,SAAChM,EAAOqM,GAKjC,OAJqBA,EAAO7L,QAAQ0F,KACvByG,SAAQ,SAACE,UACb7M,EAAM4B,WAAWiL,MAEnB7M,QC/EP8M,GAAiBnB,aAAa,kBAC9BoB,GAAuBpB,aAAa,wBACpCxL,GAAmBwL,aAAa,oBAChCqB,GAAiBrB,aAAa,kBAE9BsB,GAAe,CACnB/M,SAAU,CACR3F,KAAM,GACNU,YAAa,GACbiG,OAAQ,IAEVf,kBAAkB,EAClB+M,uBAAuB,GAalB,IAAMC,GAAyBjB,aAAce,IAAc,SAACd,GAEjEA,EACGC,QAAQU,IAAgB,SAAC9M,EAAOqM,GAC/BrM,EAAME,SAAWmM,EAAO7L,WAEzB4L,QAAQW,IAAsB,SAAC/M,EAAOqM,GACrCrM,EAAME,SAASgB,OAASmL,EAAO7L,WAEhC4L,QAAQjM,IAAkB,SAACH,GAC1B,IApB2BD,EAoBrBmL,KApBqBnL,EAoBYC,EAAME,WAlBjDH,EAAUxF,KAAKoD,OAAS,GACxBoC,EAAU9E,YAAY0C,OAAS,GAC/BoC,EAAUmB,QACVuE,OAAOS,KAAKnG,EAAUmB,QAAQvD,OAAS,GAgBnCqC,EAAMG,iBAAmB+K,KAE1BkB,QAAQY,IAAgB,SAAChN,GACxBA,EAAME,SAAW+M,GAAa/M,eCrCvBkN,GAAQC,aAAe,CAClCC,QAAS,CACP3H,eAAgBsG,GAChBhM,gBAAiBkN,MCKDI,QACW,cAA7BlD,OAAO3D,SAAS8G,UAEe,UAA7BnD,OAAO3D,SAAS8G,UAEhBnD,OAAO3D,SAAS8G,SAASC,MACvB,2DCTN,IAAMC,GAAc9O,SAAS4L,eAAe,QAE5CmD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,UAINM,IDgHI,kBAAmBI,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAACC,GAClCA,EAAaC,iB,+IE3HNxT,EAAe,CAC1ByT,SAAU,WACV7S,OAAQ,SACRX,KAAM,OACNyT,SAAU,WACV7S,gBAAiB,mBAGN8S,EAAiB,CAAC,UAAW,QAAS,QAoDtChU,EAAW,SAAAC,GAAI,OAAI,IAAIgU,MAAM,GAAI,CAC5CC,IAAK,SAACC,EAAKC,GACT,GAAiB,UAAbA,EACF,OAAOC,IAAEC,UAAUH,GAAK,kBAAM,QAEhC,GAAiB,YAAbC,EACF,OAAOC,IAAEC,UAAUH,GAAK,SAAAxN,GAAK,OAAIA,EAAMzG,WAEzC,IAAsB,gBAAjBqU,EAAQC,MAA2C,SAAjBD,EAAQC,YAAsCC,IAAlBN,EAAIC,GACrE,MAAM,IAAIM,MAAJ,gDAAmDN,EAAnD,uBAA0EnU,IAElF,OAAOkU,EAAIC,IAEbO,IAAK,SAACR,EAAKC,EAAUpT,GAQnB,MAPqB,gBAAjBuT,EAAQC,MAA2C,SAAjBD,EAAQC,MAhEpB,SAACL,EAAKC,EAAUpT,EAAOf,GAEnD,GAAiB,UAAbmU,GAAqC,YAAbA,EAC1B,MAAM,IAAIM,MAAJ,WAAcN,EAAd,6BAIR,QAAsBK,IAAlBN,EAAIC,GACN,MAAM,IAAIM,MAAJ,yCAA4CN,EAA5C,eAA2DnU,EAA3D,YASR,GANA+T,EAAe3B,SAAQ,SAAC1L,GACtB,QAAqB8N,IAAjBzT,EAAM2F,GACR,MAAM,IAAI+N,MAAJ,qCAAwCN,EAAxC,8BAAsEzN,YAIzD8N,IAAnBzT,EAAM4T,SAAwB,CAEhC,IAAKC,MAAMC,QAAQ9T,EAAM4T,UACvB,MAAM,IAAIF,MAAJ,+BAAkCN,EAAlC,mCAIRpT,EAAM4T,SAASvC,SAAQ,SAAC0C,GACtB,GAA4B,UAAxBA,EAAK/T,EAAMd,SACb,MAAM,IAAIwU,MAAJ,wBAA2B1T,EAAMd,QAAjC,gBAAgDkU,EAAhD,iCAMZ,IAAK/T,EAAaW,EAAMZ,MACtB,MAAM,IAAIsU,MAAJ,6BAAgC1T,EAAMZ,KAAtC,yBAA2DgU,IAKnE,GAAIpT,EAAMZ,OAASC,EAAaY,UAAYD,EAAMgU,UAAYH,MAAMC,QAAQ9T,EAAMgU,UAChF,MAAM,IAAIN,MAAJ,8CAAiDN,EAAjD,oBAIR,GAAIpT,EAAMZ,OAASC,EAAaY,aAA4BwT,IAAlBzT,EAAMgU,QAC9C,MAAM,IAAIN,MAAJ,iBAAoBN,EAApB,sBAA0CpT,EAAMZ,KAAhD,0CAqBJ6U,CAAed,EAAKC,EAAUpT,EAAOf,GAEvCiV,QAAQP,IAAIR,EAAKC,EAAjB,2BACKpT,GADL,IAEEf,KAAMmU,MAED,Q,sCC1FXvU,EAAOC,QAAU,CAAC,UAAY,4BAA4B,kBAAoB,oCAAoC,WAAa,6BAA6B,YAAc,gC,mBCA1KD,EAAOC,QAAU,CAAC,oBAAsB,4CAA4C,oBAAsB,4CAA4C,UAAY,kCAAkC,WAAa,qC,mBCAjND,EAAOC,QAAU,CAAC,cAAgB,uCAAuC,MAAQ,+BAA+B,SAAW,kCAAkC,aAAe,sCAAsC,UAAY,qC,mBCA9ND,EAAOC,QAAU,CAAC,gCAAkC,oDAAoD,8BAAgC,kDAAkD,YAAc,gCAAgC,cAAgB,kCAAkC,aAAe,iCAAiC,WAAa,+BAA+B,SAAW,6BAA6B,YAAc,kC,mBCA5aD,EAAOC,QAAU,CAAC,aAAe,gCAAgC,cAAgB,iCAAiC,eAAiB,kCAAkC,YAAc,+BAA+B,kBAAoB,uC,mBCAtOD,EAAOC,QAAU,CAAC,oBAAsB,6CAA6C,aAAe,wC,mBCApGD,EAAOC,QAAU,CAAC,kBAAoB,yCAAyC,gBAAkB,uCAAuC,OAAS,8BAA8B,mBAAqB,6C","file":"static/js/main.ecc8b735.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navPrimary\":\"navigation_navPrimary__dNwN2\",\"navSecondary\":\"navigation_navSecondary__27GeU\",\"navContainer\":\"navigation_navContainer__9lWgq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"portfoliosContainer\":\"viewPortfolios_portfoliosContainer__1TwW9\",\"headerContainer\":\"viewPortfolios_headerContainer__3nLh1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"snackBar\":\"snackBarRenderer_snackBar__1mJe5\",\"snackAction\":\"snackBarRenderer_snackAction__3oWRl\",\"spaceBlock\":\"snackBarRenderer_spaceBlock__3CMPq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__1PvOV\",\"container\":\"card_container__3LviL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"appcontainer_App__PvpA5\",\"App-logo\":\"appcontainer_App-logo__uhQgI\",\"App-logo-spin\":\"appcontainer_App-logo-spin__3DpZ7\",\"App-header\":\"appcontainer_App-header__1Qt-C\",\"App-link\":\"appcontainer_App-link__JL3uD\",\"bodyContainer\":\"appcontainer_bodyContainer__37EvZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"squareOne\":\"importData_squareOne__2dB_e\",\"menuGridContainer\":\"importData_menuGridContainer__1JGaW\",\"textContainer\":\"importData_textContainer__23WCX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"squareOne\":\"home_squareOne__3YqFZ\",\"menuGridContainer\":\"home_menuGridContainer__2jgih\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"squareOne\":\"exportData_squareOne__2oaNR\",\"menuGridContainer\":\"exportData_menuGridContainer__NRms1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"squareOne\":\"dashboard_squareOne__2E75J\",\"menuGridContainer\":\"dashboard_menuGridContainer__1pHvJ\"};","// Copyright (C) 2018 Swift Navigation Inc.\n//\n// Contact: Swift Navigation <dev@swiftnav.com>\n//\n// This source is subject to the license found in the file 'LICENSE'\n// which must be be distributed together with this source. All other\n// rights reserved.\n\n/*  TO DEFINE A NEW API TYPE, CALL THE FUNCTION makeType AS FOLLOWS:\n      const someType = makeType('nameYourTypeNameHere');\n    someType IS NOW PROXIED. YOU MAY DEFINE PROPERTIES, BUT YOU WILL\n    SEE BUILD ERRORS IN DEVELOPMENT AND TEST MODES IF YOU DEFINE FIELDS INCORRECTLY.\n    EXAMPLE DEFINITION:\n      someType.someProperty = {\n        default: false,\n        label: 'active',\n        type: allowedTypes.checkbox\n      }\n    NOTE: THE PROXY WRAPPING someType WILL SET THE name KEY AUTOMATICALLY:\n      someType.someProperty.name = 'someProperty';\n    NOTE: PROPERTY NAMES SHOULD MATCH CORRESPONDING PROPERTY NAMES IN THE api.\n    PROPERTIES OF CONFIGURATION OBJECTS ********************************************\n      default (REQUIRED): DEFAULT VALUE FOR FIELD\n      label (REQUIRED): THE HUMAN-READABLE NAME OF THE FIELD (WHAT USERS WILL SEE)\n      name (AUTO-GENERATED): NAME OF THE FIELD, WILL BE UNIQUE AND MATCH\n        THE OBJECT KEY IN config\n      placeholder (OPTIONAL): IF FORM INPUT BOXES FOR THIS FIELD NEED TO HAVE A\n      PLACEHOLDER THAT DIFFERS FROM label, PROVIDE THAT HERE. THIS FIELD SHOULD\n      BE A STRING.\n      type (REQUIRED): CURRENTLY, CAN BE ONE OF THE FOLLOWING:\n        text      FOR STRINGS AND NUMBERS\n        textarea  FOR LARGE BLOCKS OF INPUT TEXT\n        checkbox  FOR BOOLEANS\n        select    FOR ENUMERABLE STRING FIELDS\n      validate: IF THIS FIELD REQUIRES FORM VALIDATION, PROVIDE AN ARRAY OF VALIDATION\n      FUNCTIONS HERE. THE FUNCTION MUST BE DEFINED IN src/helpers/validation.js. SEE\n      src/helpers/validation.js FOR MORE DETAILS.\n      options (REQUIRED FOR SELECT FIELDS): ARRAY OF ALLOWED VALUES FOR FIELD.\n*/\n\n// THESE IMPORTS ARE REQUIRED FOR MOST TYPES *******************************************************\nimport { allowedTypes, makeType } from '../helpers/types';\nimport MenuItem from '@mui/material/MenuItem';\n\nconst formType = makeType('station');\n\n// DEFINE STATION FIELDS BELOW *********************************************************************\n\nformType.name = {\n  default: null,\n  label: 'Name',\n  type: allowedTypes.text,\n  onChange: (input, id) => null,\n  id: \"name\",\n  required: true,\n};\n\nformType.description = {\n  default: null,\n  label: 'Description',\n  type: allowedTypes.text,\n  onChange: (input, id) => null,\n  id: \"description\",\n  required: true,\n};\n\nformType.cryptoCurrency = {\n  default: 'UNKNOWN',\n  label: 'Coin or token *',\n  labelId: \"demo-simple-select-label\",\n  id: \"cryptoCurrency\",\n  menuItems: [<MenuItem value={'BTC'}>BTC</MenuItem>, <MenuItem value={'SOL'}>SOL</MenuItem>],\n  type: allowedTypes.select,\n  onChange: (input, id) => null,\n  required: true,\n};\n\nformType.addDropdownList = {\n  type: allowedTypes.addDropdownList,\n  id: 'assets',\n  dropdown: {\n    default: 'UNKNOWN',\n    label: 'Coin or token *',\n    labelId: \"demo-simple-select-label\",\n    id: \"currency\",\n    menuItems: [<MenuItem value={'BTC'}>BTC</MenuItem>, <MenuItem value={'SOL'}>SOL</MenuItem>],\n    required: true,\n\n  },\n  onChange: (input, id) => null,\n};\n\nformType.amount = {\n  default: null,\n  label: 'Amount (units)',\n  type: allowedTypes.text,\n  error: false,\n  helperText: \"Incorrect entry.\",\n  onChange: (input, id) => null,\n  id: \"amount\",\n  required: true,\n};\n\nexport default formType;","import formType from '../../config/formTypes';\n\nconst section = (name, fields) => ({ name, fields, });\n\nconst assetForm =  [\n    \n    section('Portfolio Information', [\n        formType.name,\n        formType.description,\n        formType.addDropdownList\n    ]),\n]\nexport default assetForm;","import TextField from '@mui/material/TextField';\n\nfunction TextFieldContainer(props) {\n\n  const changeHandler = (input) => {\n    props.onChange(input.target.value, props.id)\n  };\n\n  const styles = theme => ({\n    multilineColor:{\n        color:'red'\n    }\n});\n  \n  return <TextField\n    {...props}\n    onChange={changeHandler}\n    InputProps={{\n      className: styles.multilineColor\n    }}\n  />\n}\n\nexport default TextFieldContainer;\n","import React from 'react';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\n\nfunction SelectForm(props) {\n\n  const changeHandler = (event) => {\n    props.setChoice(event.target.value);\n    props.onChange(event.target.value, props.id)\n  };\n  \n  return (\n        <FormControl sx={{ width: '28ch' }}>\n            <InputLabel id=\"demo-simple-select-label\">\n                {props.label}\n            </InputLabel>\n            <Select {...props} value={props.choice} onChange={changeHandler} required={true} children={props.menuItems}/>\n        </FormControl>\n  );\n}\n\nexport default SelectForm;\n","import React, { useEffect, useState } from 'react';\nimport Stack from '@mui/material/Stack';\nimport SelectForm from '../SelectForm/SelectForm';\nimport Button from '@mui/material/Button';\nimport TextFieldContainer from '../../containers/FormFields/TextFieldContainer';\nimport css from './AddDropdownList.module.css';\nimport FormControl from '@mui/material/FormControl';\n\nfunction AddDropdownList(props) {\n\n  const [form, setForm] = useState(null);\n  const [choice, setChoice] = useState('');\n  const [isAddDisabled, setIsAddDisabled] = useState(true);\n\n  const createCurrency = (input, id) => {\n    const updatedState = { ...form};\n    updatedState[id] = input;\n    setForm(updatedState);\n  };\n\n  useEffect(() => {\n    if(form && form.amount && form.amount.length > 0 && form.currency && form.currency.length > 0) {\n      setIsAddDisabled(false);\n      console.log('assets validation', form.amount.length);\n    }\n    else setIsAddDisabled(true);\n\n}, [form]);\n\n  props.dropdown.choice = choice;\n  props.dropdown.setChoice = (selection) => setChoice(selection);\n\n  const submitForm = () => {\n    console.log('submitting form');\n    props.onChange(form, props.id);\n    document.forms['currency'].reset();\n    setChoice('');\n    setForm(null);\n  };\n\n  const numberProps = {\n    id: \"amount\",\n    label: \"Amount\",\n    type: \"number\",\n    InputLabelProps: {\n      shrink: true,\n    },\n    required: true,\n    onChange: (input, id) => {createCurrency(input, id)}\n  }\n  \n  return (\n    <Stack spacing={2} direction=\"row\">\n      <form id='currency'>\n        <div className={css.formContainer}>\n          <div className={css.dropdown}>\n            <SelectForm {...props.dropdown} children={props.dropdown.menuItems} onChange={(input, id) => {createCurrency(input, id)}} />\n          </div>\n          <div className={css.submitRow}>\n            <div className={css.input}>\n              <FormControl sx={{ width: '28ch' }}>\n                <TextFieldContainer {...numberProps} />\n              </FormControl>\n            </div>\n            <div className={css.input}>\n              <Button variant=\"outlined\" onClick={()=> submitForm()} disabled={isAddDisabled}>Add</Button>\n            </div>\n          </div>\n        </div>\n      </form>\n    </Stack>\n  );\n}\n\nexport default AddDropdownList;\n","// Copyright (C) 2018 Swift Navigation Inc.\n//\n// Contact: Swift Navigation <dev@swiftnav.com>\n//\n// This source is subject to the license found in the file 'LICENSE'\n// which must be be distributed together with this source. All other\n// rights reserved.\n\nimport React from 'react';\nimport { allowedTypes } from '../../helpers/types';\nimport TextFieldContainer from './TextFieldContainer';\nimport SelectForm from '../../components/SelectForm/SelectForm';\nimport AddDropdownList from '../../components/AddDropdownList/AddDropdownList';\n\nconst FieldMapper = (props) => {\n  switch (props.type) {\n    case allowedTypes.text:\n      return <TextFieldContainer {...props} />;\n    case allowedTypes.select:\n      return <SelectForm {...props} children={props.menuItems} />;\n    case allowedTypes.addDropdownList:\n        return <AddDropdownList {...props} children={props.menuItems} />;\n    default:\n      return null;\n  }\n};\n\nexport default FieldMapper;","import { useDispatch, useSelector } from 'react-redux';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch();\nexport const useAppSelector = useSelector;\n","import React from 'react';\nimport css from './buttoncontainer.module.css';\n\nexport const AppContainer = ({primaryButton, secondaryButton}) =>\n\n    <div className={css.App}>\n      <div className={css.horizontalContainer}>\n        <div className={css.buttonStyles}>\n          {secondaryButton}\n        </div>\n        <div className={css.buttonStyles}>\n          {primaryButton}\n        </div>\n      </div>\n    </div>\n\nexport default AppContainer;","import assetFormConfig from './formConfig'\nimport FieldMapper from '../../containers/FormFields/FieldMapper';\nimport css from './assetForm.module.css';\nimport React, { useEffect, useState } from 'react';\nimport Button from '@mui/material/Button';\nimport { useAppDispatch } from \"../../hooks\";\nimport FormControl, { useFormControl } from '@mui/material/FormControl';\nimport { useAppSelector } from \"../../hooks\";\nimport ButtonContainer from '../ButtonContainer/ButtonContainer';\nimport {\n    useNavigate,\n  } from \"react-router-dom\";\n\nexport default function AssetForm() {\n\n    const dispatch = useAppDispatch();\n    const navigate = useNavigate();\n\n    const formState = useAppSelector(state => state).createPortfolio.formData;\n    const isSubmitDisabled = useAppSelector(state => state).createPortfolio.isSubmitDisabled;\n    const formStateMutable = JSON.parse( JSON.stringify( formState ) );\n\n    const changeHandler = (input, id) => {\n\n        if (id === 'assets' && input) {\n            formStateMutable.assets[input.currency] = input;\n            dispatch({ type: \"updateFormDataAssets\", payload: formStateMutable.assets });\n            dispatch({ type: \"isSubmitDisabled\", payload: null });\n        }\n        else {\n            formStateMutable[id] = input;\n            console.log(formStateMutable);\n            dispatch({ type: \"updateFormData\", payload: formStateMutable});\n            dispatch({ type: \"isSubmitDisabled\", payload: null });\n        }\n    };\n\n    const submitForm = () => {\n        // Already knows that `dispatch` can accept a thunk\n        dispatch({ type: \"portfolios/add\", payload: formStateMutable});\n        dispatch({ type: \"resetToDefault\", payload: null});\n        dispatch({ type: \"isSubmitDisabled\", payload: null });\n        navigate('/coinbear', {\n            state:{ name:'Portfolio created'}\n        });\n\n    }\n\n    const cancelButtonHandler = () => {\n        dispatch({ type: \"resetToDefault\", payload: null});\n        navigate('/coinbear');\n    }\n\n    const primaryButton= <Button variant=\"outlined\" onClick={()=> submitForm()} disabled={isSubmitDisabled}>Submit</Button>;\n    const secondaryButton= <Button variant=\"outlined\" onClick={() => cancelButtonHandler()} >Cancel</Button>;\n\n    return(\n        \n        <div>\n            <head>\n                <link rel=\"stylesheet\" href=\"/style.css\" ></link>\n            </head>\n            {\n            assetFormConfig.map((section, i) => {\n                return(\n                    <div className={css.formBodyContainer}>\n                        <div className={css.sectionTitle}>\n                            <h2>{section.name}</h2>\n                        </div>\n                        <div className={css.formContainer}>\n                            <FormControl sx={{ width: '28ch' }}>\n                                {section.fields.map((field) => {\n                                    field.value = formState[field.id];\n                                    field.onChange = (input, id) => {changeHandler(input, id)}\n                                        return(\n                                            <div className={css.fieldContainer}>\n                                                {FieldMapper(field)}\n                                            </div>\n                                        );\n                                    })\n                                }\n                            </FormControl>\n                            <ButtonContainer primaryButton={primaryButton} secondaryButton={secondaryButton}/>\n                        </div>\n                    </div>\n                );\n            })\n            }\n        </div>\n    )\n}","import React from 'react';\nimport AssetForm from '../../components/AssetForm/AssetForm';\n\n\nfunction CreatePortfolio() {\n\n  return (<AssetForm />);\n}\n\nexport default CreatePortfolio;\n","\nexport const gridColumns = [\n  { field: 'name', headerName: 'Name', width: 150, renderCell: (params) => params.value},\n  { field: 'description', headerName: 'Description', width: 150, }\n];","import React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport prepareGrid from './prepareGrid';\nimport { gridColumns } from './gridColumns';\nimport PropTypes from 'prop-types';\n\nfunction ViewPortfoliosGrid(\n  {\n    portfolios,\n    areActive,\n    onRowSelect\n  }) {\n\n  const [modifiedPortfolio, setModifiedPortfolio] = useState([]);\n\n  useEffect(() => {\n    if(portfolios.length > 0) {\n      const gridData = prepareGrid(portfolios);\n      setModifiedPortfolio(gridData);\n    }\n    else {\n      setModifiedPortfolio([]);\n    }\n\n}, [portfolios]);\n\n  return (\n    <div style={{ height: 400, width: '100%', color: 'black'}}>\n      <DataGrid\n        rows={modifiedPortfolio}\n        columns={gridColumns}\n        pageSize={5}\n        rowsPerPageOptions={[5]}\n        checkboxSelection\n        disableSelectionOnClick\n        onSelectionModelChange={(ids) => {\n          const selectedIDs = new Set(ids);\n          const selectedRowData = portfolios.filter((row) =>\n          selectedIDs.has(row.id)\n          );\n          onRowSelect(selectedRowData);\n        }}\n      />\n    </div>\n  );\n}\n\nViewPortfoliosGrid.propTypes = {\n  portfolios: PropTypes.bool.isRequired,\n  isEditable: PropTypes.bool.isRequired,\n  cellChangeCallback: PropTypes.func.isRequired,\n  onRowSelect: PropTypes.func.isRequired,\n}\n\nViewPortfoliosGrid.defaultProps = {}\n\nexport default ViewPortfoliosGrid;\n","import { Link } from \"react-router-dom\";\n\nexport default function prepareGrid(portfolio) {\n    return portfolio.map((elem) => {\n      const updatedElem = {...elem};\n      updatedElem.name = <Link to={`/coinbear/myportfolios/${elem.id}`}>{elem.name}</Link>;\n      return (updatedElem);\n    })\n  };","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\nimport css from './snackBarRenderer.module.css';\nimport Snackbar from '@mui/material/Snackbar';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport PropTypes from 'prop-types';\n\nfunction SnackBarRenderer({\n    showSnackBar,\n    snackBarMessage,\n    hideSnackbarCallback\n  }) {\n\n  return (\n      <Snackbar\n        open={showSnackBar}\n        autoHideDuration={3000}\n        onClose={() => hideSnackbarCallback()}\n      >\n        <div className={css.snackBar}>\n          <CheckCircleIcon color='success' />\n          <div className={css.spaceBlock} />\n            <span>\n              {snackBarMessage}\n            </span>\n        </div>\n      </Snackbar>\n  );\n}\n\nSnackBarRenderer.propTypes = {\n  showSnackBar: PropTypes.bool.isRequired,\n  snackBarMessage: PropTypes.string.isRequired,\n  hideSnackbarCallback: PropTypes.func,\n}\n\nSnackBarRenderer.defaultProps = {\n  hideSnackbarCallback: () => {},\n}\n\nexport default SnackBarRenderer;\n","import React from 'react';\nimport css from './card.module.css';\n\nfunction Card({children}) {\n\n  return (\n        <div className={css.card}>\n          <div class={css.container}>\n            {children}\n          </div>\n        </div>\n  );\n}\n\nexport default Card;\n","/* eslint-disable react/no-typos */\n\nimport React, { useState } from 'react';\nimport css from './actionMenu.module.css';\nimport Card from '../Card/Card';\nimport PropTypes from 'prop-types';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\n\nconst getLabelText = (menuType) => {\n  if(menuType === 'portfolio') {\n    return 'Delete selected assets';\n  }\n  if(menuType === 'portfolios') {\n    return 'Delete selected portfolios'\n  }\n}\n\nfunction ActionMenu({\n  deleteSelected,\n  disableDeleteSelectedBtn,\n  show,\n  toggleEditMode,\n  menuType,\n}) {\n\n  const buttonLabel = getLabelText(menuType);\n\n  const portfoliosMenu = (\n    <div className={css.actionItems}>\n      <button\n        onClick={() => deleteSelected()}\n        className={css.actionButton}\n        disabled={disableDeleteSelectedBtn}\n      >\n        {buttonLabel}\n      </button>\n\n      <FormControlLabel className={css.labelStyles} control={<Switch onChange={toggleEditMode} disabled={menuType === 'portfolios'} />} label=\"Edit Mode\" />\n    </div>\n    );\n  if(!show) return null;\n  return (\n    <div className={css.menuContainer}>\n      <Card>\n          <div className={css.secondaryNavMenuContainerClosed}>\n            {portfoliosMenu}\n          </div>\n      </Card>\n    </div> \n  );\n}\n\nActionMenu.propTypes = {\n  deleteSelected: PropTypes.func,\n  disableDeleteSelectedBtn: PropTypes.bool.isRequired,\n  show: PropTypes.bool.isRequired,\n  toggleEditMode: PropTypes.func,\n  menuType: PropTypes.string.isRequired,\n}\n\nActionMenu.defaultProps = {\n  deleteAllPortfoliosCallback: () => {},\n  toggleEditMode: () => {},\n}\n\nexport default ActionMenu;\n","import React, { useEffect, useState } from 'react';\nimport css from './viewPortfolios.module.css';\nimport { useAppSelector } from \"../../hooks\";\nimport ViewPortfoliosGrid from '../../components/ViewPortfoliosGrid/ViewPortfoliosGrid';\nimport SnackBarRenderer from '../SnackBarRenderer/SnackBarRenderer';\nimport ActionMenu from '../../components/ActionMenu/ActionMenu';\nimport { useAppDispatch } from \"../../hooks\";\n\nfunction ViewPortfolios() {\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const state = useAppSelector(state => state);\n  const portfolios = Object.values(state.viewPortfolios.portfolios);\n  const [portfolioArray, setPortfolioArray] = useState(portfolios);\n  const [showAllDeletedSnackbar, setShowAllDeletedSnackbar] = useState(false);\n\n  useEffect(() => {\n    const portfolios = Object.values(state.viewPortfolios.portfolios);\n    \n    setPortfolioArray(portfolios);\n  }, [state.viewPortfolios.portfolios]);\n\n  const areActive = state.viewPortfolios.areActive;\n\n  const dispatch = useAppDispatch();\n\n  const deleteAllMsg = 'All portfolios have been deleted';\n\n  const rowSelectHandler = (rows) => {\n    const selectedRowKeys = rows.map( (row) => row.id);\n    setSelectedRowKeys(selectedRowKeys);\n  }\n\n  const deleteSelected = () => {\n    const data = {\n      keys: selectedRowKeys,\n    };\n    dispatch({ type: 'deletePortfolios', payload: data});\n  }\n\n  return (\n      <div className={css.portfoliosContainer}>\n        <div className={css.headerContainer}>\n          <h2>Current Portfolios</h2>\n        </div>\n        <ActionMenu \n          deleteSelected={() => deleteSelected()}\n          disableDeleteSelectedBtn={selectedRowKeys.length === 0}\n          show={areActive}\n          menuType='portfolios'\n        />\n        <ViewPortfoliosGrid\n          portfolios={portfolioArray}\n          areActive={areActive}\n          onRowSelect={(data) => rowSelectHandler(data)}\n        />\n        <SnackBarRenderer\n          showSnackBar={showAllDeletedSnackbar }\n          snackBarMessage={deleteAllMsg}\n          hideSnackbarCallback={() => setShowAllDeletedSnackbar(false)}\n        />\n      </div>\n  );\n}\n\nexport default ViewPortfolios;\n","import React from 'react';\nimport css from './menuGrid.module.css';\nimport { Link } from \"react-router-dom\";\n\n\nfunction MenuGrid() {\n  return (\n    <div className={css.menuGridContainer}>\n      <table className={css.tableStyles}>\n        <tr className={css.menuGridContainer}>\n          <Link to='/coinbear/dashboard'>\n            <td className={css.squareCard}>\n              Dashboard\n            </td>\n          </Link>\n          <Link to='/coinbear/create'>\n            <td className={css.squareCard}>\n              Create Portfolio\n            </td>\n          </Link>\n          <Link to='/coinbear/myportfolios'>\n            <td className={css.squareCard}>\n              My Portfolios\n            </td>\n          </Link>\n        </tr>\n        <tr className={css.menuGridContainer}>\n          <Link to='/coinbear/importData'>\n            <td className={css.squareCard}>\n              Import from file\n            </td>\n          </Link>\n          <Link to='/coinbear/exportData'>\n            <td className={css.squareCard}>\n              Export to file\n            </td>\n          </Link>\n          \n        </tr>\n      </table>\n    </div>\n  );\n}\n\nexport default MenuGrid;\n","import React from 'react';\nimport css from './home.module.css';\nimport MenuGrid from '../MenuGrid/MenuGrid';\nimport {useLocation} from 'react-router-dom';\nimport SnackBarRenderer from '../SnackBarRenderer/SnackBarRenderer';\n\nfunction Home() {\n\n  const location = useLocation();\n\n  return (\n  <div>\n    <MenuGrid />\n    {\n    location.state && location.state.name ?\n    <SnackBarRenderer showSnackBar={true} snackBarMessage={location.state.name} /> : null\n    }\n  </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport PropTypes from 'prop-types';\n\nfunction AssetsGrid({portfolios, isEditable, cellChangeCallback, onRowSelect }) {\n\n  const changeHandler = (e) => {\n    if(e.field && e.row && e.value && e.row[e.field] !== e.value) {\n      const data = {\n        field: e.field,\n        asset: e.row.currency,\n        value: e.value\n      };\n      cellChangeCallback(data);\n    }\n  }\n\n  const columns = [\n    { field: 'currency', headerName: 'Currency', width: 150, renderCell: (params) => params.value, editable: isEditable},\n    { field: 'amount', headerName: 'Amount', width: 150, editable: isEditable, onChange: (e) => changeHandler(e) }\n  ];\n\n  const borderColor = isEditable ? 'primary.dark' : 'primary.light';\n\n  return (\n    <div style={{ height: 400, width: '100%'}}>\n      <DataGrid\n        rows={portfolios}\n        columns={columns}\n        pageSize={10}\n        rowsPerPageOptions={[10]}\n        checkboxSelection={true}\n        disableSelectionOnClick={true}\n        onCellEditCommit={changeHandler}\n        onSelectionModelChange={(ids) => {\n          const selectedIDs = new Set(ids);\n          const selectedRowData = portfolios.filter((row) =>\n          selectedIDs.has(row.id)\n          );\n          onRowSelect(selectedRowData);\n        }}\n        sx={{\n          boxShadow: 2,\n          border: 2,\n          borderColor: borderColor,\n        }}\n        \n      />\n    </div>\n  );\n}\n\nAssetsGrid.propTypes = {\n  portfolios: PropTypes.bool.isRequired,\n  isEditable: PropTypes.bool.isRequired,\n  cellChangeCallback: PropTypes.func.isRequired,\n  onRowSelect: PropTypes.func.isRequired,\n}\n\nAssetsGrid.defaultProps = {}\n\nexport default AssetsGrid;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useAppSelector } from \"../../hooks\";\nimport css from './viewPortfolio.module.css'\nimport AssetsGrid from '../../components/AssetsGrid/AssetsGrid';\nimport { useAppDispatch } from \"../../hooks\";\nimport ActionMenu from '../../components/ActionMenu/ActionMenu';\n\nfunction ViewPortfolio() {\n  const [selectedRowKeys, setSelectedRowKeys] = useState([]);\n  const [editModeEnabled, setEditModeEnabled] = useState(false);\n  const { slug } = useParams();\n  const state = useAppSelector(state => state);\n  const dispatch = useAppDispatch();\n  \n  const portfolio = JSON.parse( JSON.stringify( state.viewPortfolios.portfolios[slug] ) );\n  portfolio.assets = Object.values(portfolio.assets).map((asset, index) => {\n    asset.id = index;\n    return asset;\n  });\n\n  const assets = JSON.parse( JSON.stringify( portfolio.assets ) );\n  \n  useEffect(() => {\n    setEditModeEnabled(false);\n  }, []);\n\nconst toggleEditMode = () => {\n  setEditModeEnabled(!editModeEnabled);\n};\n\nconst cellChangeHandler = (data) => {\n  data.portfolioID = slug\n  dispatch({ type: 'editPortfolioRow', payload: data});\n}\nconst deleteSelected = () => {\n  const data = {\n    keys: selectedRowKeys,\n    portfolioID: slug\n  };\n  dispatch({ type: 'deleteAsset', payload: data});\n}\n\nconst rowSelectHandler = (rows) => {\n  const selectedRowKeys = rows.map( (row) => row.currency);\n  setSelectedRowKeys(selectedRowKeys);\n}\n\n  return (\n    <div className={css.portfolioContainer}>\n      <div className={css.headerContainer}>\n        <h2 className={css.header} >{portfolio.name}</h2>\n        <h3 className={css.header} >{portfolio.description}</h3>\n      </div>\n\n      <ActionMenu \n          deleteSelected={() => deleteSelected()}\n          disableDeleteSelectedBtn={selectedRowKeys.length === 0}\n          show={true}\n          toggleEditMode={() => toggleEditMode()}\n          menuType='portfolio'\n\n        />\n      <AssetsGrid\n        portfolios={assets}\n        isEditable={editModeEnabled}\n        cellChangeCallback={(data) => cellChangeHandler(data)}\n        onRowSelect={(data) => rowSelectHandler(data)}\n      />\n   \n    </div>\n  );\n}\n\nexport default ViewPortfolio;\n","import React from 'react';\nimport {\n  Link,\n} from \"react-router-dom\";\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\nimport { useLocation } from 'react-router-dom';\nimport css from './breadcrumbMenu.module.css';\n\nfunction BreadcrumbMenu({ isVisibleCallback }) {\n  const pathname = useLocation().pathname;\n\n  const separator = <div className={css.separator}>/</div>;\n  const createCrumb = <div className={css.breadcrumbContainer}>\n      <Link to=\"/coinbear\" style={{ color: 'white' }} >Home</Link>\n      {separator}\n      Create\n    </div>;\n  const viewMyPortfoliosCrumb = <div className={css.breadcrumbContainer}>\n      <Link to=\"/coinbear\" style={{ color: 'white' }} >Home</Link>\n      {separator}\n      My Portfolios\n    </div>\n\n  const viewPortfolioCrumb = <div className={css.breadcrumbContainer}>\n    <Link to=\"/coinbear\" style={{ color: 'white' }} >Home</Link>\n    {separator}\n    <Link to=\"coinbear/myportfolios\" style={{ color: 'white' }} >My Portfolios</Link>\n    {separator}\n    View portfolio\n    </div>\n\n  const importDataCrumb = \n    <div className={css.breadcrumbContainer}>\n      <Link to=\"/coinbear\" style={{ color: 'white' }} >Home</Link>\n      {separator}\n      <Link to=\"/importData\" style={{ color: 'white' }} >Import data</Link>\n    </div>;\n\n  const exportDataCrumb = \n  <div className={css.breadcrumbContainer}>\n    <Link to=\"/coinbear\" style={{ color: 'white' }} >Home</Link>\n    {separator}\n    Export data\n  </div>;\n\nconst dashboardCrumb = \n<div className={css.breadcrumbContainer}>\n  <Link to=\"/coinbear\" style={{ color: 'white' }} >Home</Link>\n  {separator}\n  Dashboard\n</div>;\n\nconst crumbChangeHandler = (pathName) => {\n  if(pathname === '/coinbear') {\n    isVisibleCallback(false);\n  }\n  if(pathname === '/coinbear/create') {\n    isVisibleCallback(true);\n    return createCrumb;\n  }\n  if(pathname === '/coinbear/myportfolios') {\n    isVisibleCallback(true);\n    return viewMyPortfoliosCrumb;\n  }\n  if(pathname.includes('/coinbear/myportfolios/')) {\n    isVisibleCallback(true);\n    return viewPortfolioCrumb;\n  }\n\n  if(pathname === '/coinbear/importData') {\n    isVisibleCallback(true);\n    return importDataCrumb;\n  }\n\n  if(pathname === '/coinbear/exportData') {\n    isVisibleCallback(true);\n    return exportDataCrumb;\n  }\n\n  if(pathname === '/coinbear/dashboard') {\n    isVisibleCallback(true);\n    return dashboardCrumb;\n  }\n\n\n};\n  \n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\" >\n      {crumbChangeHandler(pathname)};\n    </Breadcrumbs>\n  );\n}\n\nexport default BreadcrumbMenu;\n","import React, { useState } from 'react';\nimport BreadcrumbMenu from '../BreadcrumbMenu/BreadcrumbMenu';\nimport css from './navigation.module.css';\n\nfunction Navigation() {\n  const [isSecondaryNavVisible, setIsSecondaryNavVisible] = useState(false);\n  \n  return (\n      <header className={css.navContainer}>\n        <div className={css.navPrimary}>\n          Placeholder for Logo\n        </div>\n        <div className={isSecondaryNavVisible ? css.navSecondary : null}>\n          <BreadcrumbMenu isVisibleCallback={(value) => setIsSecondaryNavVisible(value)} />\n        </div>\n      </header>\n  );\n}\n\nexport default Navigation;\n","import React from 'react';\nimport Box from '@mui/material/Box';\nimport Navigation from '../Navigation/Navigation';\nimport css from './appcontainer.module.css';\n\nexport const AppContainer = ({children}) => {\n\nreturn(\n    <div className={css.App}>\n      <Navigation />\n      <body className={css.bodyContainer}>\n        <Box sx={{ minWidth: 120 }}>\n            {children}\n        </Box>\n      </body>\n      \n    </div>\n);\n};\n\nexport default AppContainer;","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect } from 'react';\nimport css from './exportData.module.css';\nimport Button from '@mui/material/Button';\nimport { useAppSelector } from \"../../hooks\";\n\nfunction Home() {\n\n  const state = useAppSelector(state => state);\n  const allPortfolioState = state.viewPortfolios.portfolios;\n  const date= new Date();\n  const timestamp = Date.now();\n  const day = date.getDate();\n  const month = date.getMonth();\n  const year = date.getFullYear();\n\n\n  useEffect(() => {\n    console.log('exporting data to file');\n    const test = JSON.stringify(allPortfolioState);\n    const data = new Blob([test], {type: 'application/json'});\n    const url = window.URL.createObjectURL(data);\n    \n    document.getElementById('download_link').href = url;\n\n}, []);\n\n  return (\n  <div>\n    <h2>Export Data</h2>\n    <a id=\"download_link\" download={`coinbearExport_${day}_${month}_${year}_${timestamp}.json`} href='' >\n    <Button variant=\"outlined\">Export to file</Button>\n    </a>\n  </div>\n  );\n}\n\nexport default Home;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useEffect, useState } from 'react';\nimport css from './importData.module.css';\nimport { useAppSelector } from \"../../hooks\";\nimport { useAppDispatch } from \"../../hooks\";\n\nfunction Home() {\n  const state = useAppSelector(state => state);\n  const allPortfolioState = state.viewPortfolios.portfolios;\n  const [userState, setUserState] = useState(\"\");\n  const dispatch = useAppDispatch();\n\n\n  useEffect(() => {\n    console.log('dispatching state to reducer');\n    console.log('userState', userState);\n  }, [userState]);\n\n  const importDataHandler = (e) =>{\n\n    // Stop the form from reloading the page\n\t  e.preventDefault();\n    const fileReader = new FileReader();\n\n    fileReader.readAsText(e.target.files[0], \"UTF-8\");\n    fileReader.onload = e => {\n      const result = JSON.parse(e.target.result);\n      setUserState(result);\n      dispatch({ type: \"portfolios/import\", payload: result });\n    };\n  }\n\n  return (\n  <div>\n    <h2>Import Data</h2>\n    <input type=\"file\" onChange={(e) => importDataHandler(e)} />\n      <br />\n        {\"uploaded file content -- \" + userState}\n        <div className={css.textContainer}>\n          Import Coinbear Portfolio Data\n          <br/>\n          <br/>\n          This feature allows you to manually import previously exported portfolio data.\n          <br/>\n          The file must be of format json and it must adhere to the Coinbear data format standard.\n        </div>\n  </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport css from './dashboard.module.css';\n\nfunction Dashboard() {\n\n  return (\n  <div>\n    Watch this space.\n  </div>\n  );\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport { Routes, Route } from \"react-router-dom\";\nimport CreatePortfolio from './containers/CreatePortfolio/CreatePortfolio';\nimport ViewPortfolios from './containers/ViewPortfolios/ViewPortfolios';\nimport Home from './containers/Home/Home';\nimport ViewPortfolio from './containers/viewPortfolio/viewPortfolio';\nimport AppContainer from './components/AppContainer/AppContainer';\nimport ExportData from './containers/ExportData/ExportData';\nimport './App.css';\nimport ImportData from './containers/ImportData/ImportData';\nimport Dashboard from './containers/Dashboard/Dashboard';\n\n\nfunction App() {\n  return (\n      <AppContainer>\n        <Routes>\n          <Route path=\"coinbear/\" element={<Home />} />\n          <Route path=\"coinbear/create\" element={<CreatePortfolio />} />\n          <Route path=\"coinbear/myportfolios\" element={<ViewPortfolios />} />\n          <Route path=\"coinbear/myportfolios\" element={<ViewPortfolio />} >\n            <Route path=\":slug\" />\n          </Route>\n          <Route path=\"coinbear/exportData\" element={<ExportData />} />\n          <Route path=\"coinbear/importData\" element={<ImportData />} />\n          <Route path=\"coinbear/dashboard\" element={<Dashboard />} />\n        </Routes>\n      </AppContainer>\n  );\n}\n\nexport default App;\n","import { createAction, createReducer } from '@reduxjs/toolkit';\n\nconst add = createAction('portfolios/add');\nconst importData = createAction('portfolios/import');\nconst deleteAll = createAction('deleteAllPortfolios');\nconst editPortfolioRow = createAction('editPortfolioRow');\nconst deleteAsset = createAction('deleteAsset');\nconst deletePortfolios = createAction('deletePortfolios');\n\nconst initialState = {\n  portfolios: {},\n  areActive: false,\n};\n\n\nexport const portfoliosReducer = createReducer(initialState, (builder) => {\n  \n  builder\n    .addCase(add, (state, action) => {\n      const index = Object.keys(state.portfolios).length;\n      action.payload.id = index;\n      state.portfolios[action.payload.id] = action.payload;\n      if(state.areActive === false) {\n        state.areActive = true;\n      }\n    })\n    .addCase(importData, (state, action) => {\n      const importArray = Object.values(action.payload);\n\n      const portfoliosMutable = JSON.parse( JSON.stringify( state.portfolios ) );\n\n      const existingPortfolios = Object.values(portfoliosMutable);\n      const newArray = existingPortfolios.concat(importArray);\n\n      const newState = {};\n\n      newArray.forEach((portfolio, index) => {\n        portfolio.id = index;\n        newState[index] = portfolio;\n      });\n\n      state.portfolios = newArray;\n    })\n    .addCase(deleteAll, (state, action) => {\n      state.portfolios = {}\n      state.areActive = false;\n    })\n    .addCase(editPortfolioRow, (state, action) => {\n      const portfolioID = action.payload.portfolioID;\n      console.log('action reducer', action);\n      if(action.payload.field === 'currency') {\n\n        const assetState = state.portfolios[portfolioID].assets[action.payload.asset];\n        // update existing property\n        assetState[action.payload.field] = action.payload.value;\n  \n        // create new property using value\n        state.portfolios[portfolioID].assets[action.payload.value] = assetState;\n        delete state.portfolios[portfolioID].assets[action.payload.asset]\n        return state;\n      }\n      if(action.payload.field === 'amount') {\n        const assetState = state.portfolios[portfolioID].assets[action.payload.asset];\n        assetState[action.payload.field] = action.payload.value;\n        state.portfolios[portfolioID].assets[action.payload.asset] = assetState;\n        return state;\n      }\n      return state;\n    })\n    .addCase(deleteAsset, (state, action) => {\n      const keysToRemove = action.payload.keys;\n      keysToRemove.forEach((key) => {\n        delete state.portfolios[action.payload.portfolioID].assets[key];\n      });\n      return state\n    })\n    .addCase(deletePortfolios, (state, action) => {\n      const keysToRemove = action.payload.keys;\n      keysToRemove.forEach((key) => {\n        delete state.portfolios[key];\n      });\n      return state\n    })\n})","import { createAction, createReducer } from '@reduxjs/toolkit';\n\nconst updateFormData = createAction('updateFormData');\nconst updateFormDataAssets = createAction('updateFormDataAssets');\nconst isSubmitDisabled = createAction('isSubmitDisabled');\nconst resetToDefault = createAction('resetToDefault');\n\nconst initialState = {\n  formData: {\n    name: '',\n    description: '',\n    assets: {},\n  },\n  isSubmitDisabled: true,\n  isAddCurrencyDisabled: true,\n};\n\nfunction isSubmitDisabledHandler(formState) {\n  const isDisabled = (formState &&\n  formState.name.length > 0 &&\n  formState.description.length > 0 &&\n  formState.assets &&\n  Object.keys(formState.assets).length > 0)\n  return !isDisabled;\n}\n\n\nexport const createPortfolioReducer = createReducer(initialState, (builder) => {\n  \n  builder\n    .addCase(updateFormData, (state, action) => {\n      state.formData = action.payload;\n    })\n    .addCase(updateFormDataAssets, (state, action) => {\n      state.formData.assets = action.payload;\n    })\n    .addCase(isSubmitDisabled, (state) => {\n      const result = isSubmitDisabledHandler(state.formData);\n      state.isSubmitDisabled = result;\n    })\n    .addCase(resetToDefault, (state) => {\n      state.formData = initialState.formData;\n    })\n})","import { configureStore } from '@reduxjs/toolkit';\nimport { portfoliosReducer } from '../ducks/portfoliosReducer';\nimport { createPortfolioReducer } from '../ducks/createPortfolioReducer';\n\nexport const store = configureStore({\n  reducer: {\n    viewPortfolios: portfoliosReducer,\n    createPortfolio: createPortfolioReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// Copyright (C) 2018 Swift Navigation Inc.\n//\n// Contact: Swift Navigation <dev@swiftnav.com>\n//\n// This source is subject to the license found in the file 'LICENSE'\n// which must be be distributed together with this source. All other\n// rights reserved.\n\nimport _ from 'lodash';\n\nexport const allowedTypes = {\n  checkbox: 'checkbox',\n  select: 'select',\n  text: 'text',\n  textarea: 'textarea',\n  addDropdownList: 'addDropdownList'\n};\n\nexport const requiredFields = ['default', 'label', 'type'];\n\nexport const checkConfigObj = (obj, property, value, name) => {\n  // MAKE SURE WE ARE NOT ATTEMPTING TO SET A RESERVED KEY\n  if (property === 'Empty' || property === 'Default') {\n    throw new Error(`'${property}' is a reserved keyword.`);\n  }\n\n  // THROW ERROR IF WE ARE ATTEMPTING TO SET THE SAME FIELD MULTIPLE TIMES\n  if (obj[property] !== undefined) {\n    throw new Error(`Found redundant definition for ${property} in ${name} config`);\n  }\n  // ERROR IF CONFIG OBJECT IS MISSING A REQUIRED FIELD\n  requiredFields.forEach((field) => {\n    if (value[field] === undefined) {\n      throw new Error(`Attempting to define field ${property} without value for ${field}`);\n    }\n  });\n\n  if (value.validate !== undefined) {\n    // CHECK THAT validate, IF IT EXISTS, IS AN ARRAY\n    if (!Array.isArray(value.validate)) {\n      throw new Error(`Definition for field ${property} has invalid property validate`);\n    }\n\n    // CHECK THAT THE DEFAULT VALUE PROVIDED PASSES VALIDATION\n    value.validate.forEach((func) => {\n      if (func(value.default) === 'error') {\n        throw new Error(`Default value ${value.default} for ${property} does not pass validation`);\n      }\n    });\n  }\n\n  // CHECK THAT THE INPUT TYPE PROVIDED IS VALID\n  if (!allowedTypes[value.type]) {\n    throw new Error(`Invalid input type ${value.type} for property ${property}`);\n  }\n\n\n  // CHECK THAT SELECT FIELDS HAVE options ARRAY\n  if (value.type === allowedTypes.select && (!value.options || !Array.isArray(value.options))) {\n    throw new Error(`No select options defined for field ${property} of type select`);\n  }\n\n  // CHECK THAT NON-SELECT FIELDS DO NOT HAVE options SET\n  if (value.type !== allowedTypes.select && value.options !== undefined) {\n    throw new Error(`Field '${property}' of type '${value.type}' should not have options configured.`);\n  }\n\n  return true;\n};\n\nexport const makeType = name => new Proxy({}, {\n  get: (obj, property) => {\n    if (property === 'Empty') {\n      return _.mapValues(obj, () => null);\n    }\n    if (property === 'Default') {\n      return _.mapValues(obj, field => field.default);\n    }\n    if ((process.mode === 'development' || process.mode === 'test') && obj[property] === undefined) {\n      throw new Error(`Attempting to access undefined field '${property}' in config ${name}`);\n    }\n    return obj[property];\n  },\n  set: (obj, property, value) => {\n    if (process.mode === 'development' || process.mode === 'test') {\n      checkConfigObj(obj, property, value, name);\n    }\n    Reflect.set(obj, property, {\n      ...value,\n      name: property\n    });\n    return true;\n  }\n});","// extracted by mini-css-extract-plugin\nmodule.exports = {\"squareOne\":\"menuGrid_squareOne__1Jk_R\",\"menuGridContainer\":\"menuGrid_menuGridContainer__2eLQo\",\"squareCard\":\"menuGrid_squareCard__2EMV1\",\"tableStyles\":\"menuGrid_tableStyles__2G3ZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"breadcrumbContainer\":\"breadcrumbMenu_breadcrumbContainer__2iQE-\",\"customLinkContainer\":\"breadcrumbMenu_customLinkContainer__3Fxwy\",\"separator\":\"breadcrumbMenu_separator__3VMN0\",\"linkStyles\":\"breadcrumbMenu_linkStyles__13m_A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formContainer\":\"AddDropdownList_formContainer__XAEfw\",\"input\":\"AddDropdownList_input__3vMIr\",\"dropdown\":\"AddDropdownList_dropdown__1HcB1\",\"addContainer\":\"AddDropdownList_addContainer__2-8T8\",\"submitRow\":\"AddDropdownList_submitRow__1Zh0w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"secondaryNavMenuContainerClosed\":\"actionMenu_secondaryNavMenuContainerClosed__1Fqyu\",\"secondaryNavMenuContainerOpen\":\"actionMenu_secondaryNavMenuContainerOpen__2fwGc\",\"actionItems\":\"actionMenu_actionItems__1ZhSL\",\"menuContainer\":\"actionMenu_menuContainer__1ZpPw\",\"actionButton\":\"actionMenu_actionButton__133DD\",\"editButton\":\"actionMenu_editButton__2IYIv\",\"editText\":\"actionMenu_editText__3SITr\",\"labelStyles\":\"actionMenu_labelStyles__1jLzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sectionTitle\":\"assetForm_sectionTitle__3wwaY\",\"formContainer\":\"assetForm_formContainer__1jAZQ\",\"fieldContainer\":\"assetForm_fieldContainer__3bWld\",\"buttonStyle\":\"assetForm_buttonStyle__23qf3\",\"formBodyContainer\":\"assetForm_formBodyContainer__3XxSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"horizontalContainer\":\"buttoncontainer_horizontalContainer__2uWNA\",\"buttonStyles\":\"buttoncontainer_buttonStyles__c2dX7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"currencyContainer\":\"viewPortfolio_currencyContainer__TjEf0\",\"headerContainer\":\"viewPortfolio_headerContainer__1MJM8\",\"header\":\"viewPortfolio_header__pbyGn\",\"portfolioContainer\":\"viewPortfolio_portfolioContainer__2usL8\"};"],"sourceRoot":""}